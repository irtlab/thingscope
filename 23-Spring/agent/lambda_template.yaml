AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: thingscope mini

Globals:
  Function:
    CodeUri: .
    Runtime: python3.7
    Timeout: 300
    MemorySize: 4096
    EphemeralStorage: 
      Size: 2048
    Layers:
      - arn:aws:lambda:us-east-1:040801773313:layer:thingscope:1
    Environment:
      Variables:
        BUCKET: !Sub "${AWS::StackName}bucket"

Resources:
  thingscopeAWS:
    Type: AWS::Serverless::Function
    Properties:
      Handler: aws_handler.handlerFromS3
      Role: !GetAtt FunctionRole.Arn

  thingscopeDrive:
    Type: AWS::Serverless::Function
    Properties:
      Handler: aws_handler.handlerFromDrive
      Role: !GetAtt FunctionRole.Arn
      FunctionUrlConfig:
        AuthType: NONE

  bucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - bucketPermission
    Properties:
      BucketName: !Sub "${AWS::StackName}bucket"
      NotificationConfiguration:
        LambdaConfigurations:
            - Event: s3:ObjectCreated:*
              Function: !GetAtt thingscopeAWS.Arn
      
  bucketPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt thingscopeAWS.Arn
      Principal: s3.amazonaws.com
      SourceArn: !Sub 'arn:aws:s3:::${AWS::StackName}bucket'
      SourceAccount: !Ref AWS::AccountId

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: s3ReadWrite
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                Resource:
                  - !Sub "arn:aws:s3:::${AWS::StackName}bucket/*"
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - "*"
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: 'arn:aws:secretsmanager:us-east-1:040801773313:secret:thingscopegoogle-DPnHOr'

Outputs:
  MyFunctionUrlEndpoint:
      Value:
        !GetAtt thingscopeDriveUrl.FunctionUrl